services:

  postgres:
    image: postgres:14-alpine
    # expose:
      # - "5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=fp9iAsd8ufy7p9UF)p98sduYfjOfd98y123!@3
      - POSTGRES_DB=winter_dragon
      - PGUSER=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres", "-d", "winter_dragon"]
      interval: 5s
      timeout: 30s
      retries: 6
      start_period: 10s

  bot:
    container_name: discord-bot
    build:
      context: .
      dockerfile: bot/dockerfile
    volumes:
      - ./bot:/bot
      - ./database:/database
      - ./config.ini:./config.ini
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    container_name: website-backend
    build:
      context: .
      dockerfile: backend/dockerfile
    volumes:
      - ./database:/database
      - ./backend:/backend
    expose:
      - 8000
    # WARNING!: Ports should only be opened to the host for development
    ports:
      - 8480:8000
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    container_name: website-frontend
    build:
      context: .
      dockerfile: frontend/dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - 80:3000

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgres
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    networks:
      - default
